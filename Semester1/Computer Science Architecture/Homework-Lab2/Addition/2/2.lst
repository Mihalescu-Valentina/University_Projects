     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ; a-b+(c-d+a)
    15 00000000 0300                        a dw 3
    16 00000002 0100                        b dw 1
    17 00000004 0700                        c dw 7
    18 00000006 0200                        d dw 2
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[04000000]                  mov ax, [c] 
    25 00000006 662B05[06000000]                sub ax, [d] 
    26 0000000D 660305[00000000]                add ax, [a]
    27 00000014 6689C3                          mov bx, ax
    28 00000017 66A1[00000000]                  mov ax, [a]
    29 0000001D 662B05[02000000]                sub ax, [b]
    30 00000024 6601D8                          add ax, bx
    31                                          
    32                                          ; exit(0)
    33 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
