     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;[b*c-(e+f)]/(a+d)
    15 00000000 01                          a db 1
    16 00000001 03                          b db 3
    17 00000002 04                          c db 4
    18 00000003 01                          d db 1
    19 00000004 0200                        e dw 2
    20 00000006 0200                        f dw 2
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 66A1[04000000]                  mov ax, [e]
    27 00000006 660305[06000000]                add ax, [f]
    28 0000000D 6689C3                          mov bx, ax
    29 00000010 A0[01000000]                    mov al, [b]
    30 00000015 8A0D[02000000]                  mov cl, [c]
    31 0000001B F6E1                            mul cl
    32 0000001D 6698                            cbw
    33 0000001F 6629D8                          sub ax, bx
    34 00000022 8A1D[00000000]                  mov bl, [a]
    35 00000028 021D[03000000]                  add bl, [d]
    36 0000002E F6F3                            div bl
    37                                          
    38                                          
    39                                          ; exit(0)
    40 00000030 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000032 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
